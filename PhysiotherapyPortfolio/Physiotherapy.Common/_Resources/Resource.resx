<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A0001" xml:space="preserve">
    <value>Press your first name and name in &lt;b&gt;greek&lt;/b&gt;</value>
  </data>
  <data name="A0002" xml:space="preserve">
    <value>Press your first name and name in &lt;b&gt;english&lt;/b&gt;</value>
  </data>
  <data name="A0004" xml:space="preserve">
    <value>Insert address of your physiotherapy center to &lt;b&gt;greek characters&lt;/b&gt;</value>
  </data>
  <data name="A0005" xml:space="preserve">
    <value>No {0} were found. Add if you wish.</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="Apr" xml:space="preserve">
    <value>Apr</value>
  </data>
  <data name="April" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="AreYouSureYouWantSignOut" xml:space="preserve">
    <value>Are you sure you want log out?</value>
  </data>
  <data name="Aug" xml:space="preserve">
    <value>Aug</value>
  </data>
  <data name="August" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="BeCareful" xml:space="preserve">
    <value>Be Careful</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="CapsLockOn" xml:space="preserve">
    <value>Caps lock is on</value>
  </data>
  <data name="ChangePhoto" xml:space="preserve">
    <value>Change Photo</value>
  </data>
  <data name="ChooseCity" xml:space="preserve">
    <value>Choose City</value>
  </data>
  <data name="ChooseCountry" xml:space="preserve">
    <value>Choose Country</value>
  </data>
  <data name="ChooseState" xml:space="preserve">
    <value>Choose State</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ClearFields" xml:space="preserve">
    <value>Clear fields</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="DateFormatGr" xml:space="preserve">
    <value>dd/mm/yyyy</value>
  </data>
  <data name="Dec" xml:space="preserve">
    <value>Dec</value>
  </data>
  <data name="December" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="Diseases" xml:space="preserve">
    <value>Diseases</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailFormat" xml:space="preserve">
    <value>The email doesn't have right format example@example.com</value>
    <comment>Email Format</comment>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="EnterAddress" xml:space="preserve">
    <value>Enter the address</value>
  </data>
  <data name="EnterCity" xml:space="preserve">
    <value>Enter the city</value>
  </data>
  <data name="EnterCountry" xml:space="preserve">
    <value>Enter the country</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Enter email</value>
  </data>
  <data name="EnterNumber" xml:space="preserve">
    <value>Enter the number</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Enter Password</value>
  </data>
  <data name="EnterPasswordAgain" xml:space="preserve">
    <value>Enter password again</value>
  </data>
  <data name="EnterPostCode" xml:space="preserve">
    <value>Enter the post code</value>
  </data>
  <data name="EnterState" xml:space="preserve">
    <value>Enter the state</value>
  </data>
  <data name="EnterUsername" xml:space="preserve">
    <value>Enter Username</value>
  </data>
  <data name="Er0001" xml:space="preserve">
    <value>Something wrong with the email address</value>
    <comment>Error</comment>
  </data>
  <data name="Er0002" xml:space="preserve">
    <value>The email address is empty</value>
    <comment>Error</comment>
  </data>
  <data name="Er0003" xml:space="preserve">
    <value>User not found. Please check the username!</value>
    <comment>Error</comment>
  </data>
  <data name="Er0004" xml:space="preserve">
    <value>Something wrong. Please check the password.</value>
    <comment>Error</comment>
  </data>
  <data name="Er0005" xml:space="preserve">
    <value>The username cannot be empty!</value>
    <comment>Error</comment>
  </data>
  <data name="Er0006" xml:space="preserve">
    <value>The username cannot be empty!</value>
    <comment>Error</comment>
  </data>
  <data name="Er0007" xml:space="preserve">
    <value>Something went wrong.</value>
  </data>
  <data name="Er0008" xml:space="preserve">
    <value>Please login to access in this page.</value>
  </data>
  <data name="Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="Feb" xml:space="preserve">
    <value>Feb</value>
  </data>
  <data name="February" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="FieldIsRequired" xml:space="preserve">
    <value>Field is required</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameEl" xml:space="preserve">
    <value>First name in greek</value>
  </data>
  <data name="FirstNameEn" xml:space="preserve">
    <value>First name in english</value>
  </data>
  <data name="Fri" xml:space="preserve">
    <value>Fri</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Greek" xml:space="preserve">
    <value>Greek</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Jan" xml:space="preserve">
    <value>Jan</value>
  </data>
  <data name="January" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="Jul" xml:space="preserve">
    <value>Jul</value>
  </data>
  <data name="July" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="Jun" xml:space="preserve">
    <value>Jun</value>
  </data>
  <data name="June" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameEl" xml:space="preserve">
    <value>Last name in greek</value>
  </data>
  <data name="LastNameEn" xml:space="preserve">
    <value>Last name in english</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="M0001" xml:space="preserve">
    <value>Login successful</value>
    <comment>Message</comment>
  </data>
  <data name="M0002" xml:space="preserve">
    <value>Logout successful!</value>
    <comment>Message</comment>
  </data>
  <data name="Mar" xml:space="preserve">
    <value>Mar</value>
  </data>
  <data name="March" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="MayS" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Mon" xml:space="preserve">
    <value>Mon</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="MyCV" xml:space="preserve">
    <value>My CV</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Nov" xml:space="preserve">
    <value>Nov</value>
  </data>
  <data name="November" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Oct" xml:space="preserve">
    <value>Oct</value>
  </data>
  <data name="October" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="OnlyEnglishChar" xml:space="preserve">
    <value>Insert english characters</value>
    <comment>Only English Char</comment>
  </data>
  <data name="OnlyGreekChar" xml:space="preserve">
    <value>Insert greek characters</value>
    <comment>Only Greek Char</comment>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="ParticipationsConferences" xml:space="preserve">
    <value>Participations/Conferences</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordDoNotMatch" xml:space="preserve">
    <value>Password do not match</value>
  </data>
  <data name="PasswordErrorMessage" xml:space="preserve">
    <value>Passwords must be at least 8 characters and contain at 3 or 4 of the following: upper latin character (A-Z), lower latin character (a-z), number (0-9) and special character (e.g. !@#$%^&amp;*)</value>
    <comment>Strong Password</comment>
  </data>
  <data name="PasswordValid" xml:space="preserve">
    <value>The password is not valid</value>
  </data>
  <data name="PersonalInformation" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PhoneFormat" xml:space="preserve">
    <value>The phone doesn't have right format</value>
    <comment>Phone/Mobile Format</comment>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>Post Code</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RehabilitationExercises" xml:space="preserve">
    <value>Rehabilitation Exercises</value>
  </data>
  <data name="Sat" xml:space="preserve">
    <value>Sat</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sep" xml:space="preserve">
    <value>Sep</value>
  </data>
  <data name="September" xml:space="preserve">
    <value>September</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SpyrouGeorge" xml:space="preserve">
    <value>Spyrou George</value>
    <comment>Site Owner</comment>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StringLenghtF" xml:space="preserve">
    <value>The {0} must be 5-50 characters</value>
    <comment>String Length Female</comment>
  </data>
  <data name="StringLenghtM" xml:space="preserve">
    <value>The {0} must be 5-50 characters</value>
    <comment>String Length Male</comment>
  </data>
  <data name="StringLenghtO" xml:space="preserve">
    <value>The {0} must be 5-50 characters</value>
    <comment>String Length Object</comment>
  </data>
  <data name="Studies" xml:space="preserve">
    <value>Studies</value>
  </data>
  <data name="Sun" xml:space="preserve">
    <value>Sun</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thu" xml:space="preserve">
    <value>Thu</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Tue" xml:space="preserve">
    <value>Tue</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="UserInformation" xml:space="preserve">
    <value>Information's User</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Wed" xml:space="preserve">
    <value>Wed</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>